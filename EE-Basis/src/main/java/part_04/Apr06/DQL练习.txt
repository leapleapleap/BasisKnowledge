
CREATE DATABASE db1;
SHOW DATABASES;
USE db1
CREATE TABLE student(
	id INT PRIMARY KEY AUTO_INCREMENT, -- 主键、自增
	NAME VARCHAR(20) NOT NULL, -- 非空
	sex VARCHAR(4),
	birth YEAR,
	department VARCHAR(20) NOT NULL,  -- 非空
	address VARCHAR(50)
);
DROP TABLE student
CREATE TABLE score(
	id INT PRIMARY KEY AUTO_INCREMENT, -- 主键、自增
	stu_id INT NOT NULL, --非空
	c_name VARCHAR(20),
	grade INT
);

DESC student
DESC score
-- 给student表中插入数据
INSERT INTO student VALUES(901,'张老大','男',1985,'计算机系','北京市海淀区');
INSERT INTO student VALUES(902,'张老二','男',1986,'中文系','北京市昌平区');
INSERT INTO student VALUES(903,'张三','女',1990,'中文系','湖南省永州市');
INSERT INTO student VALUES(904,'李四','男',1990,'英语系','辽宁省阜新市');
INSERT INTO student VALUES(905,'王五','女',1991,'英语系','福建省厦门市');
INSERT INTO student VALUES(906,'王六','男',1988,'计算机系','湖南省衡阳市');

-- 查询student表的所有记录
SELECT * FROM student

-- 给score表中插入数据
INSERT INTO score VALUES(NULL,901,'计算机',98);
INSERT INTO score VALUES(NULL,901,'英语',80);
INSERT INTO score VALUES(NULL,902,'计算机',65);
INSERT INTO score VALUES(NULL,902,'中文',80);
INSERT INTO score VALUES(NULL,903,'中文',95);
INSERT INTO score VALUES(NULL,904,'计算机',70);
INSERT INTO score VALUES(NULL,904,'英语',92);
INSERT INTO score VALUES(NULL,905,'英语',94);
INSERT INTO score VALUES(NULL,906,'计算机',90);
INSERT INTO score VALUES(NULL,906,'英语',85);

-- 查询score表的所有记录
SELECT * FROM score

-- 查询student表的第2条到4条记录
SELECT
    *
FROM
    student
LIMIT 1,3

-- 从student表查询所有学生的学号（id）、姓名（name）和院系（department）的信息
SELECT
    id,
    NAME,
    department
FROM
    student

-- 从student表中查询计算机系和英语系的学生的信息
SELECT
    *
FROM
    student
WHERE
    department IN ('计算机系','英语系')

-- 从student表中查询年龄28~32岁的学生信息
SELECT
    *
FROM
    student
WHERE
    (2019-birth) BETWEEN 28 AND 32

-- 从student表中查询每个院系有多少人
SELECT
    department,
    COUNT(*) 人数
FROM
    student
GROUP BY
    department

-- 从score表中查询每个科目的最高分
SELECT
    c_name 学科,
    MAX(grade) 最高成绩
FROM
    score
GROUP BY
    学科

-- 查询李四的考试科目（c_name）和考试成绩（grade）
SELECT 
	c_name,
	grade
FROM score
WHERE stu_id=(
	SELECT id FROM student WHERE NAME='李四');
/*子查询结果为单行单列时，子查询语句跟在where后使用运算符判断*/

-- 用连接的方式查询所有学生的信息和考试信息
-- 隐式内连接
SELECT
	st.*,
	sc.*
FROM
	student st,
	score sc
WHERE
	st.`id`=sc.`stu_id`

-- 显示内连接
SELECT * FROM
	student st
INNER JOIN 
	score sc
ON 
	st.`id` = sc.`stu_id`

-- 左外连接
SELECT * FROM 
	student st
LEFT OUTER JOIN 
	score sc 
ON
	sc.`stu_id`=st.`id`
	
-- 计算每个学生的总成绩
/*子查询结果为多行多列时，子查询语句作为虚拟表进行多表查询*/
SELECT
	*
FROM 
	student,
	(SELECT stu_id,SUM(grade) FROM score GROUP BY stu_id) t1 
WHERE
	student.`id`=t1.`stu_id`
	
-- 计算每个考试科目的平均成绩
SELECT
	c_name,
	AVG(grade)
FROM 
	score
GROUP BY
	c_name
	
-- 查询计算机成绩低于95的学生信息
SELECT * 
FROM student,(SELECT * FROM score WHERE grade <95 AND c_name='计算机' GROUP BY c_name ) t1
WHERE student.`id`=t1.`stu_id`

-- 查询同时参加计算机和英语考试的学生的信息
SELECT
	*
FROM
	student,
	(SELECT stu_id,COUNT(*) total FROM score GROUP BY stu_id) t1
WHERE 
	student.id=t1.stu_id AND t1.total=2
	
-- 将计算机考试成绩按从高到低进行排序
SELECT * FROM score WHERE score.`c_name`='计算机' ORDER BY grade DESC

-- 从student表和score表中查询出学生的学号，然后合并查询结果 
SELECT * FROM student st,score sc WHERE st.`id`=sc.`stu_id`

-- 查询姓张或者姓王的同学的姓名、院系和考试科目及成绩
SELECT
	t1.`name`,
	t1.`department`,
	sc.`c_name`,
	sc.grade
FROM
	score sc,(SELECT
		st.`id` id,
		st.`name`,
		st.`department`
	FROM 
		student st
	WHERE
		st.name LIKE '张%' OR st.name LIKE '王%') t1
WHERE
	t1.`id`= sc.`stu_id` 
	AND  (t1.`name` LIKE '张%' OR t1.name LIKE '王%' )



SELECT
	st.`name`,
	st.`department`,
	sc.`c_name`,
	sc.`grade`
FROM
	student st
RIGHT OUTER JOIN 
	score sc
ON 
	st.`id`= sc.`stu_id` 
	AND  (st.`name` LIKE '张%' OR st.name LIKE '王%' )
	
	

-- 查询都是湖南的学生的姓名、年龄、院系和考试科目及成绩
SELECT
	t1.`name`,
	t1.`department`,
	sc.`c_name`,
	sc.grade
FROM
	score sc,(SELECT
		st.`id` id,
		st.`name`,
		st.`department`,
		st.`address`
	FROM 
		student st
	WHERE
		st.`address` LIKE '湖南%') t1
WHERE
	t1.`id`= sc.`stu_id` 
	
	