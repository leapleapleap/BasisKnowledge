回顾：
javascript：
	概念：
		它是一门客户端脚本语言
		它运行在浏览器上，由浏览器内置的js解析器解析执行，不需要编译
		一门弱类型的语言
	基础语法：
		结合html的使用
			1.内部js：
				通过 <script>标签包裹，在内部书写js代码；

			2.外部js：
				先定义js文件，书写js代码，在html文档中通过script标签引入，src属性可以指定js文件路径
				*************
					如果一个script标签用来引入了外部的js文件，那么就不能再这对标签内书写其他的js代码
			script标签可以定义在html文档的任何地方，建议定义在head标签内或body体标签的结尾

			script标签的书写位置会影响整个html页面的解析执行流程
		注释：
			单行：
				//
			多行：
				/**/

		数据类型：
			原始数据类型:
				number:
				string:
				boolean:
				null:
				undefined:
			引用数据类型：
				对象

		变量：
			变量的定义格式：
				var 变量名=值；
				变量名=值；
				let 变量名=值；
					ECMAScript6

			********************
				变量的作用域分为以下3中：
					1.全局作用域：
					2.函数作用域：
					3.块级作用域：
		运算符：
			一元运算符：
				++ -- + -；
				string->number:
					如果字符串是数值类型的，则正常转换，如果不是，则转为NaN；
				boolean->number:
					true:1
					false:0
				null->number:
					0
				undefined->number:
					NaN
			算数运算符：
				+ - * / % += -= *= /= %=
			比较运算符：
				> >= < <= != == ===

				==:
					如果类型不一致，则转换后再比较值
				===:
					如果类型不一致，则直接返回false
			逻辑元素符：
				&& || ！
			三元运算符：
				表达式1？ 表达式2：表达式3

		流程控制语句：
			switch语句被判断的量可以是任意类型的数据

		常用对象：
			Function：
				它可以代表方法；
				创建方式：
					1. var 方法名 = new Function(参数类表,方法体);
					2. var 方法名 = function(参数列表){方法体}
					3. function 方法名(参数列表){方法体}
				属性：
					length：参数的长度：
				特点：
					1.方法的调用和参数没有关系，只和方法名有关系；
					2.每个Function对象内部都会有一个隐藏的arguments数组对象，用来接收传递的所有参数

			Array:
				创建方式：
					new Array(数组长度)
					new Array(元素列表)
					[元素列表]
				特点：
					长度可变，类型可变；

				常用方法：
					join
					push
			Date:
				toLocalString()
				getTime()
			Math:
				ceil
				random
				floor
				abs
				...

今日内容:
	常用对象：
		Regexp：
		Global：

	DOM和事件的简单学习：

	BOM：

	******************
		ECMAScript+BOM+DOM

19_JavaScript_对象_RegExp1(理解)
	什么是正则表达式？
		定义了字符串的组成规则

	\d 表示什么？digital
		单个数字字符
	\w 表示什么？word
		单个单词字符
	*代表什么？
		任意多个
	+代表什么？
		至少一个
	？代表什么？
		0个或1个
	{m,n}代表什么？
		至少m个，最多n个

21_JavaScript_对象_RegExp2
	怎么验证一个字符串是否符合RegExp定义的规则？

24_JavaScript_对象_Global
	全局对象的特点？
		使用其方法，不需要创建对象，直接调用
	**********************8
		我们自己在html中书写的js代码都属于全局对象Global；
		当js解析器解析执行html中的js代码时，会默认提供一个Global对象，包含了书写的所有js代码；

	URL编码做了什么事情？
		先把数据通过 指定编码格式  转换成 字节，然后再把字节转换成 16进制，用百分号隔开

	encodeURI方法和encodeURIComponent方法的区别

	NaN参与运算，结果是什么？
		NaN

	eval方法可以干嘛？
		解析字符串形式的js代码，并执行

02_DOM简单学习
	DOM的作用？
		动态的控制html文档元素

	获取元素对象的方法？每一个标签会被封装成Element
		getElementById();
	修改属性的格式？
		元素对象名.属性名=属性值
	修改标签体内容的格式？
		元素对象名.innerHTML=标签体的内容
		innerHTML：
			替换标签体的内容
		innerText：
			替换标签的文本内容

03_事件简单学习
	标签
	一段代码
	一个事件

	绑定事件的两种方式？
		1.直接在标签上书写   事件名="一段代码"；
			如果代码里面写了  方法名();这个方法是程序员手动调用的
		2.把一段代码用方法封装起来，再通过js代码获取到标签对应的元素对象
			元素对象名.事件名 = 方法名；
			方法是js解析器自动调用的，当对应的标签上发生了对应的事件后，自动调用

		*********************
			light2.onclick =  function(){
				alert('咋老点我？');
			};

			没有名字的方法对象叫匿名函数

04_案例1_电灯开关

05_BOM_概述
	什么是BOM？
		浏览器对象模型
		可以让我们使用代码来操作浏览器

	BOM的组成？
		window
		location
		history
		navigator
		screen

06_BOM_Window_弹出方法
	Window对象需不需要创建？
		不要
	Window里面的方法能否直接调用？
		可以

	****************************
		浏览器给我们生成的全局对象就是window，它就是一个Global对象；

		我们自己书写的代码都属于window这个对象；

	3种弹出对话框的方法？
		alert()
		confirm()//会返回一个boolean类型的值来代表用户点击的是确定还是取消
		prompt()

07_BOM_Window_打开关闭方法
	打开新窗口的方法？
	关闭已经打开的窗口？


09_BOM_Window_定时器方法
	定时执行一次？
	    var num = setTimeOut()
			返回一个定时器的编号
	取消一次定时？
		clearTimeOut(编号)
	定时执行多次？
		setInterval()
			返回定时器的编号
	取消多次定时？
		clearInterval(编号)

10_案例2_轮播图

11_BOM_Window_属性
	window和document的关系？

12_BOM_Location
	刷新？
		reload()
	指定url？
		href="url地址"

13_案例3_自动跳转首页

14_BOM_History
	如何获取当前窗口的历史记录个数？
		属性：
			length
	方法？
		forward（）
		back（）
		go(数字)